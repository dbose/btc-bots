name: Weekly BTC Bot Execution

on:
  schedule:
    - cron: '0 1 * * MON'  # Runs at 1 AM UTC every Monday
  workflow_dispatch:  # Allows manual trigger

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
  LOG_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}

jobs:
  run-btc-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Start EC2 instance
      run: |
        aws ec2 start-instances --instance-ids $EC2_INSTANCE_ID
        aws ec2 wait instance-running --instance-ids $EC2_INSTANCE_ID
        echo "EC2 instance is running"

    - name: Wait for instance to be ready
      run: sleep 30

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2.key
        chmod 600 ~/.ssh/ec2.key
        echo "Host ec2
          HostName ${{ secrets.EC2_PUBLIC_IP }}
          User ec2-user
          IdentityFile ~/.ssh/ec2.key
          StrictHostKeyChecking no" > ~/.ssh/config

    - name: Create .env file
      run: |
        echo "AWS_EC2_PUBLIC_IP=${{ secrets.EC2_PUBLIC_IP }}" > .env
        echo "BTCMARKETS_API_KEY=${{ secrets.BTCMARKETS_API_KEY }}" >> .env
        echo "BTCMARKETS_PRIVATE_KEY=${{ secrets.BTCMARKETS_PRIVATE_KEY }}" >> .env
        echo "BASE_WEEKLY_AMOUNT=${{ secrets.BASE_WEEKLY_AMOUNT }}" >> .env
        echo "MAX_WEEKLY_AMOUNT=${{ secrets.MAX_WEEKLY_AMOUNT }}" >> .env
        echo "MIN_WEEKLY_AMOUNT=${{ secrets.MIN_WEEKLY_AMOUNT }}" >> .env

    - name: Deploy and run bot
      env:
        KEY_PATH: ~/.ssh/ec2.key
        AWS_EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      run: |
        python deploy.py deploy
        python deploy.py test
        sleep 10
        python deploy.py logs today > today_log.txt

    - name: Upload logs to S3
      run: |
        DATE=$(date +%Y%m%d)
        aws s3 cp today_log.txt s3://${LOG_BUCKET}/logs/btc_bot_${DATE}.log

    - name: Stop EC2 instance
      if: always()
      run: |
        aws ec2 stop-instances --instance-ids $EC2_INSTANCE_ID
        aws ec2 wait instance-stopped --instance-ids $EC2_INSTANCE_ID

    - name: Save logs as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs
        path: today_log.txt
        retention-days: 30